"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth_middleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/middleware */ \"(middleware)/./node_modules/next-auth/middleware.js\");\n/* harmony import */ var next_auth_middleware__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_middleware__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n// src/middleware.ts\n\n\n// Define path sets for easier checking\nconst PUBLIC_PATHS = new Set([\n    '/',\n    '/login',\n    '/register',\n    '/about',\n    '/pricing'\n]);\nconst AUTH_PATHS = new Set([\n    '/login',\n    '/register'\n]);\nconst PROTECTED_PATHS = new Set([\n    '/dashboard',\n    '/profile',\n    '/settings'\n]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_auth_middleware__WEBPACK_IMPORTED_MODULE_0__.withAuth)(function middleware(req) {\n    const { pathname } = req.nextUrl;\n    const token = req.nextauth.token;\n    // Create response with security headers\n    const response = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next();\n    response.headers.set('X-Content-Type-Options', 'nosniff');\n    response.headers.set('X-Frame-Options', 'DENY');\n    response.headers.set('X-XSS-Protection', '1; mode=block');\n    response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\n    // Allow public paths without any redirection\n    if (PUBLIC_PATHS.has(pathname)) {\n        return response;\n    }\n    // If user is not authenticated and tries to access protected routes\n    if (!token && PROTECTED_PATHS.has(pathname)) {\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/login', req.url));\n    }\n    // If user is authenticated\n    if (token) {\n        // If trying to access auth pages while logged in\n        if (AUTH_PATHS.has(pathname)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/dashboard', req.url));\n        }\n        // Only redirect to onboarding if:\n        // 1. User hasn't completed onboarding\n        // 2. Is trying to access a protected path\n        // 3. Is not already on an onboarding path\n        // 4. Is not accessing an API route\n        if (!token.hasCompletedOnboarding && PROTECTED_PATHS.has(pathname) && !pathname.startsWith('/onboarding') && !pathname.startsWith('/api')) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/onboarding/career-path', req.url));\n        }\n        // If user has completed onboarding but tries to access onboarding paths\n        if (token.hasCompletedOnboarding && pathname.startsWith('/onboarding')) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/dashboard', req.url));\n        }\n    }\n    return response;\n}, {\n    callbacks: {\n        authorized: ({ token, req })=>{\n            const { pathname } = req.nextUrl;\n            // Always allow public paths\n            if (PUBLIC_PATHS.has(pathname)) {\n                return true;\n            }\n            // Allow onboarding paths with authentication\n            if (pathname.startsWith('/onboarding') && token) {\n                return true;\n            }\n            // Require authentication for protected paths\n            if (PROTECTED_PATHS.has(pathname)) {\n                return !!token;\n            }\n            // Default to allowing access\n            return true;\n        }\n    }\n}));\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except:\n     * 1. /api routes\n     * 2. /_next (static files)\n     * 3. /favicon.ico (favicon file)\n     * 4. /public files\n     */ '/((?!api|_next/static|_next/image|favicon.ico|public).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aXNrLzEwIFBST0pFQ1RTL2F4aW9tYWx5LW5ldy9zcmMvbWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbWlkZGxld2FyZS50c1xuaW1wb3J0IHsgd2l0aEF1dGggfSBmcm9tIFwibmV4dC1hdXRoL21pZGRsZXdhcmVcIjtcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdFdpdGhBdXRoIH0gZnJvbSBcIm5leHQtYXV0aC9taWRkbGV3YXJlXCI7XG5cbi8vIERlZmluZSBwYXRoIHNldHMgZm9yIGVhc2llciBjaGVja2luZ1xuY29uc3QgUFVCTElDX1BBVEhTID0gbmV3IFNldChbJy8nLCAnL2xvZ2luJywgJy9yZWdpc3RlcicsICcvYWJvdXQnLCAnL3ByaWNpbmcnXSk7XG5jb25zdCBBVVRIX1BBVEhTID0gbmV3IFNldChbJy9sb2dpbicsICcvcmVnaXN0ZXInXSk7XG5jb25zdCBQUk9URUNURURfUEFUSFMgPSBuZXcgU2V0KFsnL2Rhc2hib2FyZCcsICcvcHJvZmlsZScsICcvc2V0dGluZ3MnXSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhBdXRoKFxuICBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcTogTmV4dFJlcXVlc3RXaXRoQXV0aCkge1xuICAgIGNvbnN0IHsgcGF0aG5hbWUgfSA9IHJlcS5uZXh0VXJsO1xuICAgIGNvbnN0IHRva2VuID0gcmVxLm5leHRhdXRoLnRva2VuO1xuICAgIFxuICAgIC8vIENyZWF0ZSByZXNwb25zZSB3aXRoIHNlY3VyaXR5IGhlYWRlcnNcbiAgICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KCk7XG4gICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ1gtQ29udGVudC1UeXBlLU9wdGlvbnMnLCAnbm9zbmlmZicpO1xuICAgIHJlc3BvbnNlLmhlYWRlcnMuc2V0KCdYLUZyYW1lLU9wdGlvbnMnLCAnREVOWScpO1xuICAgIHJlc3BvbnNlLmhlYWRlcnMuc2V0KCdYLVhTUy1Qcm90ZWN0aW9uJywgJzE7IG1vZGU9YmxvY2snKTtcbiAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnUmVmZXJyZXItUG9saWN5JywgJ3N0cmljdC1vcmlnaW4td2hlbi1jcm9zcy1vcmlnaW4nKTtcblxuICAgIC8vIEFsbG93IHB1YmxpYyBwYXRocyB3aXRob3V0IGFueSByZWRpcmVjdGlvblxuICAgIGlmIChQVUJMSUNfUEFUSFMuaGFzKHBhdGhuYW1lKSkge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cblxuICAgIC8vIElmIHVzZXIgaXMgbm90IGF1dGhlbnRpY2F0ZWQgYW5kIHRyaWVzIHRvIGFjY2VzcyBwcm90ZWN0ZWQgcm91dGVzXG4gICAgaWYgKCF0b2tlbiAmJiBQUk9URUNURURfUEFUSFMuaGFzKHBhdGhuYW1lKSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbG9naW4nLCByZXEudXJsKSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdXNlciBpcyBhdXRoZW50aWNhdGVkXG4gICAgaWYgKHRva2VuKSB7XG4gICAgICAvLyBJZiB0cnlpbmcgdG8gYWNjZXNzIGF1dGggcGFnZXMgd2hpbGUgbG9nZ2VkIGluXG4gICAgICBpZiAoQVVUSF9QQVRIUy5oYXMocGF0aG5hbWUpKSB7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2Rhc2hib2FyZCcsIHJlcS51cmwpKTtcbiAgICAgIH1cblxuICAgICAgLy8gT25seSByZWRpcmVjdCB0byBvbmJvYXJkaW5nIGlmOlxuICAgICAgLy8gMS4gVXNlciBoYXNuJ3QgY29tcGxldGVkIG9uYm9hcmRpbmdcbiAgICAgIC8vIDIuIElzIHRyeWluZyB0byBhY2Nlc3MgYSBwcm90ZWN0ZWQgcGF0aFxuICAgICAgLy8gMy4gSXMgbm90IGFscmVhZHkgb24gYW4gb25ib2FyZGluZyBwYXRoXG4gICAgICAvLyA0LiBJcyBub3QgYWNjZXNzaW5nIGFuIEFQSSByb3V0ZVxuICAgICAgaWYgKCF0b2tlbi5oYXNDb21wbGV0ZWRPbmJvYXJkaW5nICYmIFxuICAgICAgICAgIFBST1RFQ1RFRF9QQVRIUy5oYXMocGF0aG5hbWUpICYmIFxuICAgICAgICAgICFwYXRobmFtZS5zdGFydHNXaXRoKCcvb25ib2FyZGluZycpICYmIFxuICAgICAgICAgICFwYXRobmFtZS5zdGFydHNXaXRoKCcvYXBpJykpIHtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvb25ib2FyZGluZy9jYXJlZXItcGF0aCcsIHJlcS51cmwpKTtcbiAgICAgIH1cblxuICAgICAgLy8gSWYgdXNlciBoYXMgY29tcGxldGVkIG9uYm9hcmRpbmcgYnV0IHRyaWVzIHRvIGFjY2VzcyBvbmJvYXJkaW5nIHBhdGhzXG4gICAgICBpZiAodG9rZW4uaGFzQ29tcGxldGVkT25ib2FyZGluZyAmJiBwYXRobmFtZS5zdGFydHNXaXRoKCcvb25ib2FyZGluZycpKSB7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2Rhc2hib2FyZCcsIHJlcS51cmwpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0sXG4gIHtcbiAgICBjYWxsYmFja3M6IHtcbiAgICAgIGF1dGhvcml6ZWQ6ICh7IHRva2VuLCByZXEgfSkgPT4ge1xuICAgICAgICBjb25zdCB7IHBhdGhuYW1lIH0gPSByZXEubmV4dFVybDtcbiAgICAgICAgXG4gICAgICAgIC8vIEFsd2F5cyBhbGxvdyBwdWJsaWMgcGF0aHNcbiAgICAgICAgaWYgKFBVQkxJQ19QQVRIUy5oYXMocGF0aG5hbWUpKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEFsbG93IG9uYm9hcmRpbmcgcGF0aHMgd2l0aCBhdXRoZW50aWNhdGlvblxuICAgICAgICBpZiAocGF0aG5hbWUuc3RhcnRzV2l0aCgnL29uYm9hcmRpbmcnKSAmJiB0b2tlbikge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBSZXF1aXJlIGF1dGhlbnRpY2F0aW9uIGZvciBwcm90ZWN0ZWQgcGF0aHNcbiAgICAgICAgaWYgKFBST1RFQ1RFRF9QQVRIUy5oYXMocGF0aG5hbWUpKSB7XG4gICAgICAgICAgcmV0dXJuICEhdG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIERlZmF1bHQgdG8gYWxsb3dpbmcgYWNjZXNzXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSxcbiAgICB9LFxuICB9XG4pO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXG4gICAgLypcbiAgICAgKiBNYXRjaCBhbGwgcmVxdWVzdCBwYXRocyBleGNlcHQ6XG4gICAgICogMS4gL2FwaSByb3V0ZXNcbiAgICAgKiAyLiAvX25leHQgKHN0YXRpYyBmaWxlcylcbiAgICAgKiAzLiAvZmF2aWNvbi5pY28gKGZhdmljb24gZmlsZSlcbiAgICAgKiA0LiAvcHVibGljIGZpbGVzXG4gICAgICovXG4gICAgJy8oKD8hYXBpfF9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljb3xwdWJsaWMpLiopJyxcbiAgXSxcbn07Il0sIm5hbWVzIjpbIndpdGhBdXRoIiwiTmV4dFJlc3BvbnNlIiwiUFVCTElDX1BBVEhTIiwiU2V0IiwiQVVUSF9QQVRIUyIsIlBST1RFQ1RFRF9QQVRIUyIsIm1pZGRsZXdhcmUiLCJyZXEiLCJwYXRobmFtZSIsIm5leHRVcmwiLCJ0b2tlbiIsIm5leHRhdXRoIiwicmVzcG9uc2UiLCJuZXh0IiwiaGVhZGVycyIsInNldCIsImhhcyIsInJlZGlyZWN0IiwiVVJMIiwidXJsIiwiaGFzQ29tcGxldGVkT25ib2FyZGluZyIsInN0YXJ0c1dpdGgiLCJjYWxsYmFja3MiLCJhdXRob3JpemVkIiwiY29uZmlnIiwibWF0Y2hlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});